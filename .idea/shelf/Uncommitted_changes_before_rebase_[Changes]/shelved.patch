Index: app/src/main/java/com/example/marsnasa1/screen/Marsnasa1Screen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.marsnasa1.screen\r\n\r\n\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.material3.*\r\nimport androidx.compose.runtime.*\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.lifecycle.viewmodel.compose.viewModel\r\nimport coil.compose.AsyncImage\r\nimport com.example.marsnasa1.viewModel.Marsnasa1ViewModel\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.ui.draw.clip\r\nimport com.example.marsnasa1.ui.theme.Purple40\r\nimport com.google.accompanist.pager.ExperimentalPagerApi\r\nimport com.google.accompanist.pager.HorizontalPager\r\nimport com.google.accompanist.pager.HorizontalPagerIndicator\r\nimport com.google.accompanist.pager.rememberPagerState\r\n\r\n\r\n\r\n\r\n@OptIn(ExperimentalPagerApi::class)\r\n@Composable\r\nfun Marsnasa1Screen (apiKey: String, sol: Int, date: String?){val viewModel: Marsnasa1ViewModel = viewModel()\r\n    var loading by remember { mutableStateOf(true) }\r\n    val scope = rememberCoroutineScope()\r\n    LaunchedEffect(Unit) {\r\n        viewModel.fetchPhotos(apiKey, \"Curiosity\", sol, date)\r\n        loading = false\r\n    }\r\n\r\n    val photos = viewModel.photos.value\r\n    val error = viewModel.error.collectAsState(initial = null).value\r\n    val pagerState = rememberPagerState()\r\n\r\n    Column(modifier = Modifier.fillMaxSize(), horizontalAlignment = Alignment.CenterHorizontally) {\r\n        Text(\r\n            text = \"Mars Rover Photos\",\r\n            style = MaterialTheme.typography.headlineSmall.copy(color = Purple40),\r\n            modifier = Modifier.padding(16.dp)\r\n        )\r\n\r\n        when {\r\n            error != null -> {\r\n                Text(\r\n                    text = error,\r\n                    style = MaterialTheme.typography.bodyMedium,\r\n                    modifier = Modifier.padding(16.dp)\r\n                )\r\n            }\r\n            loading -> {\r\n                Text(\r\n                    text = \"Загрузка фотографий...\",\r\n                    style = MaterialTheme.typography.bodyMedium,\r\n                    modifier = Modifier.padding(16.dp)\r\n                )\r\n            }\r\n            else -> {\r\n                HorizontalPager(\r\n                    state = pagerState,\r\n                    count = photos.size,\r\n                    modifier = Modifier\r\n                        .weight(1f)\r\n                        .padding(horizontal = 16.dp)\r\n                ) { page ->\r\n                    val photo = photos[page]\r\n                    Column(\r\n                        modifier = Modifier\r\n                            .fillMaxSize()\r\n                            .padding(16.dp),\r\n                        horizontalAlignment = Alignment.CenterHorizontally\r\n                    ) {\r\n                        AsyncImage(\r\n                            model = photo.img_src,\r\n                            contentDescription = photo.earth_date,\r\n                            modifier = Modifier\r\n                                .fillMaxWidth()\r\n                                .height(300.dp)\r\n                                .clip(RoundedCornerShape(8.dp)),\r\n                        )\r\n                    }\r\n                }\r\n                HorizontalPagerIndicator(\r\n                    pagerState = pagerState,\r\n                    modifier = Modifier\r\n                        .align(Alignment.CenterHorizontally)\r\n                        .padding(16.dp)\r\n                )\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/marsnasa1/screen/Marsnasa1Screen.kt b/app/src/main/java/com/example/marsnasa1/screen/Marsnasa1Screen.kt
--- a/app/src/main/java/com/example/marsnasa1/screen/Marsnasa1Screen.kt	(revision fec2ff08cda1195855a16e74230d11ee5d068e58)
+++ b/app/src/main/java/com/example/marsnasa1/screen/Marsnasa1Screen.kt	(date 1732263265445)
@@ -18,14 +18,11 @@
 import com.google.accompanist.pager.HorizontalPagerIndicator
 import com.google.accompanist.pager.rememberPagerState
 
-
-
-
 @OptIn(ExperimentalPagerApi::class)
 @Composable
-fun Marsnasa1Screen (apiKey: String, sol: Int, date: String?){val viewModel: Marsnasa1ViewModel = viewModel()
+fun Marsnasa1Screen(apiKey: String, sol: Int, date: String?) {
+    val viewModel: Marsnasa1ViewModel = viewModel<Marsnasa1ViewModel>()
     var loading by remember { mutableStateOf(true) }
-    val scope = rememberCoroutineScope()
     LaunchedEffect(Unit) {
         viewModel.fetchPhotos(apiKey, "Curiosity", sol, date)
         loading = false
@@ -50,6 +47,7 @@
                     modifier = Modifier.padding(16.dp)
                 )
             }
+
             loading -> {
                 Text(
                     text = "Загрузка фотографий...",
@@ -57,6 +55,7 @@
                     modifier = Modifier.padding(16.dp)
                 )
             }
+
             else -> {
                 HorizontalPager(
                     state = pagerState,
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <bytecodeTargetLevel target=\"17\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	(revision fec2ff08cda1195855a16e74230d11ee5d068e58)
+++ b/.idea/compiler.xml	(date 1732263241693)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="CompilerConfiguration">
-    <bytecodeTargetLevel target="17" />
+    <bytecodeTargetLevel target="21" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision fec2ff08cda1195855a16e74230d11ee5d068e58)
+++ /dev/null	(revision fec2ff08cda1195855a16e74230d11ee5d068e58)
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: app/src/main/java/com/example/marsnasa1/savelmg/Marsnasa1SaveimageToGallery.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/marsnasa1/savelmg/Marsnasa1SaveimageToGallery.kt b/app/src/main/java/com/example/marsnasa1/savelmg/Marsnasa1SaveimageToGallery.kt
new file mode 100644
--- /dev/null	(date 1732263265414)
+++ b/app/src/main/java/com/example/marsnasa1/savelmg/Marsnasa1SaveimageToGallery.kt	(date 1732263265414)
@@ -0,0 +1,2 @@
+package com.example.marsnasa1.savelmg
+
Index: app/src/main/java/com/example/marsnasa1/savelmg/Marsnasa1RequestPermission.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/marsnasa1/savelmg/Marsnasa1RequestPermission.kt b/app/src/main/java/com/example/marsnasa1/savelmg/Marsnasa1RequestPermission.kt
new file mode 100644
--- /dev/null	(date 1732263265393)
+++ b/app/src/main/java/com/example/marsnasa1/savelmg/Marsnasa1RequestPermission.kt	(date 1732263265393)
@@ -0,0 +1,2 @@
+package com.example.marsnasa1.savelmg
+
Index: app/src/main/java/com/example/marsnasa1/viewModel/Marsnasa1ViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.marsnasa1.viewModel\r\n\r\nimport android.provider.ContactsContract\r\nimport android.util.Log\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport com.example.marsnasa1.retrofit.Marsnasa1Retrofitinstance\r\nimport kotlinx.coroutines.flow.MutableStateFlow\r\nimport kotlinx.coroutines.flow.StateFlow\r\nimport com.example.marsnasa1.model.Marsnasa1Photo\r\nimport com.example.marsnasa1.model.Marsnasa1Response\r\nimport retrofit2.Callback\r\nimport retrofit2.Call\r\nimport retrofit2.Response\r\nimport kotlinx.coroutines.flow.update\r\nclass Marsnasa1ViewModel {\r\n    var photos = mutableStateOf<List<Marsnasa1Photo>>(emptyList())\r\n    private val _error = MutableStateFlow<String?>(null)\r\n    val error: StateFlow<String?> get() = _error\r\n\r\n    fun fetchPhotos(apiKey: String, rover: String, sol: Int, date: String? = null) {\r\n        Log.d(\"MarsRoverViewModel\", \"Запрос к API: sol=$sol, date=$date, apiKey=$apiKey\")\r\n        val call = Marsnasa1Retrofitinstance.api.getPhotos(rover, sol, date, apiKey)\r\n        call.enqueue(object : Callback<Marsnasa1Response> {\r\n            override fun onResponse(call: Call<Marsnasa1Response>, response: Response<Marsnasa1Response>) {\r\n                if (response.isSuccessful) {\r\n                    photos.value = response.body()?.photos ?: emptyList()\r\n                    _error.update { null }\r\n                    Log.d(\r\n                        \"MarsRoverViewModel\",\r\n                        \"Успешный ответ: количество фотографий = ${photos.value.size}\"\r\n                    )\r\n                } else {\r\n                    _error.update { \"Ошибка: ${response.code()} ${response.message()}\" }\r\n                    Log.e(\r\n                        \"MarsRoverViewModel\",\r\n                        \"Ошибка ответа: ${response.code()} ${response.message()}\"\r\n                    )\r\n                }\r\n            }\r\n\r\n            override fun onFailure(call: Call<Marsnasa1Response>, t: Throwable) {\r\n                Log.e(\"MarsRoverViewModel\", \"Ошибка: ${t.message}\")\r\n                _error.update { \"Ошибка: ${t.localizedMessage}\" }\r\n            }\r\n        })\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/marsnasa1/viewModel/Marsnasa1ViewModel.kt b/app/src/main/java/com/example/marsnasa1/viewModel/Marsnasa1ViewModel.kt
--- a/app/src/main/java/com/example/marsnasa1/viewModel/Marsnasa1ViewModel.kt	(revision fec2ff08cda1195855a16e74230d11ee5d068e58)
+++ b/app/src/main/java/com/example/marsnasa1/viewModel/Marsnasa1ViewModel.kt	(date 1732263265564)
@@ -1,18 +1,22 @@
 package com.example.marsnasa1.viewModel
 
-import android.provider.ContactsContract
+
 import android.util.Log
 import androidx.compose.runtime.mutableStateOf
-import com.example.marsnasa1.retrofit.Marsnasa1Retrofitinstance
+
 import kotlinx.coroutines.flow.MutableStateFlow
 import kotlinx.coroutines.flow.StateFlow
 import com.example.marsnasa1.model.Marsnasa1Photo
 import com.example.marsnasa1.model.Marsnasa1Response
+import com.example.marsnasa1.retrofit.Marsnasa1Retrofitinstance
 import retrofit2.Callback
 import retrofit2.Call
 import retrofit2.Response
 import kotlinx.coroutines.flow.update
-class Marsnasa1ViewModel {
+import androidx.lifecycle.ViewModel
+
+
+class Marsnasa1ViewModel : ViewModel() {
     var photos = mutableStateOf<List<Marsnasa1Photo>>(emptyList())
     private val _error = MutableStateFlow<String?>(null)
     val error: StateFlow<String?> get() = _error
Index: app/src/main/java/com/example/marsnasa1/retrofit/Marsnasa1Retrofitinstance.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.marsnasa1.retrofit\r\n\r\nimport com.example.marsnasa1.api.Marsnasa1Api\r\nimport okhttp3.OkHttpClient\r\nimport okhttp3.logging.HttpLoggingInterceptor\r\nimport retrofit2.Retrofit\r\nimport retrofit2.converter.gson.GsonConverterFactory\r\nimport java.util.concurrent.TimeUnit\r\n\r\nclass Marsnasa1Retrofitinstance {\r\n    private const val BASE_URL = \"https://api.nasa.gov/\"\r\n    private val logging = HttpLoggingInterceptor().apply {\r\n        level = HttpLoggingInterceptor.Level.BODY\r\n    }\r\n    private val client = OkHttpClient.Builder()\r\n        .addInterceptor(logging)\r\n        .connectTimeout(60, TimeUnit.SECONDS)\r\n        .readTimeout(60, TimeUnit.SECONDS)\r\n        .writeTimeout(60, TimeUnit.SECONDS)\r\n        .build()\r\n\r\n    val api: Marsnasa1Api by lazy {\r\n        Retrofit.Builder()\r\n            .baseUrl(BASE_URL)\r\n            .client(client)\r\n            .addConverterFactory(GsonConverterFactory.create())\r\n            .build()\r\n            .create(Marsnasa1Api::class.java)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/marsnasa1/retrofit/Marsnasa1Retrofitinstance.kt b/app/src/main/java/com/example/marsnasa1/retrofit/Marsnasa1Retrofitinstance.kt
--- a/app/src/main/java/com/example/marsnasa1/retrofit/Marsnasa1Retrofitinstance.kt	(revision fec2ff08cda1195855a16e74230d11ee5d068e58)
+++ b/app/src/main/java/com/example/marsnasa1/retrofit/Marsnasa1Retrofitinstance.kt	(date 1732263265365)
@@ -7,7 +7,7 @@
 import retrofit2.converter.gson.GsonConverterFactory
 import java.util.concurrent.TimeUnit
 
-class Marsnasa1Retrofitinstance {
+object Marsnasa1Retrofitinstance {
     private const val BASE_URL = "https://api.nasa.gov/"
     private val logging = HttpLoggingInterceptor().apply {
         level = HttpLoggingInterceptor.Level.BODY
@@ -27,4 +27,4 @@
             .build()
             .create(Marsnasa1Api::class.java)
     }
-}
\ No newline at end of file
+}
Index: app/src/main/java/com/example/marsnasa1/repository/Marsnasa1Repository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/marsnasa1/repository/Marsnasa1Repository.kt b/app/src/main/java/com/example/marsnasa1/repository/Marsnasa1Repository.kt
new file mode 100644
--- /dev/null	(date 1732263265335)
+++ b/app/src/main/java/com/example/marsnasa1/repository/Marsnasa1Repository.kt	(date 1732263265335)
@@ -0,0 +1,4 @@
+package com.example.marsnasa1.repository
+
+class Marsnasa1Repository {
+}
\ No newline at end of file
Index: app/src/main/java/com/example/marsnasa1/repository/Marsnasa1loadimageFromUrl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/marsnasa1/repository/Marsnasa1loadimageFromUrl.kt b/app/src/main/java/com/example/marsnasa1/repository/Marsnasa1loadimageFromUrl.kt
new file mode 100644
--- /dev/null	(date 1732263265312)
+++ b/app/src/main/java/com/example/marsnasa1/repository/Marsnasa1loadimageFromUrl.kt	(date 1732263265312)
@@ -0,0 +1,2 @@
+package com.example.marsnasa1.repository
+
Index: app/src/main/java/com/example/marsnasa1/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.marsnasa1\r\n\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport com.example.marsnasa1.screen.Marsnasa1Screen\r\nimport com.example.marsnasa1.ui.theme.Marsnasa1Theme\r\n\r\nclass MainActivity : ComponentActivity() {\r\n    private val apiKey: String =\"ключ\"\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContent {\r\n            Log.d(\"MainActivity\", \"Setting content\")\r\n            Marsnasa1Screen(apiKey, sol = 1122, date = \"2024-10-01\")\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/marsnasa1/MainActivity.kt b/app/src/main/java/com/example/marsnasa1/MainActivity.kt
--- a/app/src/main/java/com/example/marsnasa1/MainActivity.kt	(revision fec2ff08cda1195855a16e74230d11ee5d068e58)
+++ b/app/src/main/java/com/example/marsnasa1/MainActivity.kt	(date 1732263265202)
@@ -16,7 +16,7 @@
 import com.example.marsnasa1.ui.theme.Marsnasa1Theme
 
 class MainActivity : ComponentActivity() {
-    private val apiKey: String ="ключ"
+    private val apiKey: String ="fXiQuucR6dq0W7odYCaGpUPKCbfmghuD6EseRtxT"
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         setContent {
Index: .idea/kotlinc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"KotlinJpsPluginSettings\">\r\n    <option name=\"version\" value=\"1.9.0\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/kotlinc.xml b/.idea/kotlinc.xml
--- a/.idea/kotlinc.xml	(revision fec2ff08cda1195855a16e74230d11ee5d068e58)
+++ b/.idea/kotlinc.xml	(date 1732263241765)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="KotlinJpsPluginSettings">
-    <option name="version" value="1.9.0" />
+    <option name="version" value="1.9.21" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"jbr-17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision fec2ff08cda1195855a16e74230d11ee5d068e58)
+++ b/.idea/misc.xml	(date 1732263275654)
@@ -1,7 +1,6 @@
-<?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="jbr-17" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="jbr-21" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"InspectionProjectProfileManager\">\r\n  <profile version=\"1.0\">\r\n    <option name=\"myName\" value=\"Project Default\" />\r\n    <inspection_tool class=\"ComposePreviewDimensionRespectsLimit\" enabled=\"true\" level=\"WARNING\" enabled_by_default=\"true\">\r\n      <option name=\"composableFile\" value=\"true\" />\r\n      <option name=\"previewFile\" value=\"true\" />\r\n    </inspection_tool>\r\n    <inspection_tool class=\"ComposePreviewMustBeTopLevelFunction\" enabled=\"true\" level=\"ERROR\" enabled_by_default=\"true\">\r\n      <option name=\"composableFile\" value=\"true\" />\r\n      <option name=\"previewFile\" value=\"true\" />\r\n    </inspection_tool>\r\n    <inspection_tool class=\"ComposePreviewNeedsComposableAnnotation\" enabled=\"true\" level=\"ERROR\" enabled_by_default=\"true\">\r\n      <option name=\"composableFile\" value=\"true\" />\r\n      <option name=\"previewFile\" value=\"true\" />\r\n    </inspection_tool>\r\n    <inspection_tool class=\"ComposePreviewNotSupportedInUnitTestFiles\" enabled=\"true\" level=\"ERROR\" enabled_by_default=\"true\">\r\n      <option name=\"composableFile\" value=\"true\" />\r\n      <option name=\"previewFile\" value=\"true\" />\r\n    </inspection_tool>\r\n    <inspection_tool class=\"GlancePreviewDimensionRespectsLimit\" enabled=\"true\" level=\"WARNING\" enabled_by_default=\"true\">\r\n      <option name=\"composableFile\" value=\"true\" />\r\n    </inspection_tool>\r\n    <inspection_tool class=\"GlancePreviewMustBeTopLevelFunction\" enabled=\"true\" level=\"ERROR\" enabled_by_default=\"true\">\r\n      <option name=\"composableFile\" value=\"true\" />\r\n    </inspection_tool>\r\n    <inspection_tool class=\"GlancePreviewNeedsComposableAnnotation\" enabled=\"true\" level=\"ERROR\" enabled_by_default=\"true\">\r\n      <option name=\"composableFile\" value=\"true\" />\r\n    </inspection_tool>\r\n    <inspection_tool class=\"GlancePreviewNotSupportedInUnitTestFiles\" enabled=\"true\" level=\"ERROR\" enabled_by_default=\"true\">\r\n      <option name=\"composableFile\" value=\"true\" />\r\n    </inspection_tool>\r\n    <inspection_tool class=\"PreviewAnnotationInFunctionWithParameters\" enabled=\"true\" level=\"ERROR\" enabled_by_default=\"true\">\r\n      <option name=\"composableFile\" value=\"true\" />\r\n      <option name=\"previewFile\" value=\"true\" />\r\n    </inspection_tool>\r\n    <inspection_tool class=\"PreviewApiLevelMustBeValid\" enabled=\"true\" level=\"ERROR\" enabled_by_default=\"true\">\r\n      <option name=\"composableFile\" value=\"true\" />\r\n      <option name=\"previewFile\" value=\"true\" />\r\n    </inspection_tool>\r\n    <inspection_tool class=\"PreviewFontScaleMustBeGreaterThanZero\" enabled=\"true\" level=\"ERROR\" enabled_by_default=\"true\">\r\n      <option name=\"composableFile\" value=\"true\" />\r\n      <option name=\"previewFile\" value=\"true\" />\r\n    </inspection_tool>\r\n    <inspection_tool class=\"PreviewMultipleParameterProviders\" enabled=\"true\" level=\"ERROR\" enabled_by_default=\"true\">\r\n      <option name=\"composableFile\" value=\"true\" />\r\n      <option name=\"previewFile\" value=\"true\" />\r\n    </inspection_tool>\r\n    <inspection_tool class=\"PreviewPickerAnnotation\" enabled=\"true\" level=\"ERROR\" enabled_by_default=\"true\">\r\n      <option name=\"composableFile\" value=\"true\" />\r\n      <option name=\"previewFile\" value=\"true\" />\r\n    </inspection_tool>\r\n  </profile>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
--- a/.idea/inspectionProfiles/Project_Default.xml	(revision fec2ff08cda1195855a16e74230d11ee5d068e58)
+++ b/.idea/inspectionProfiles/Project_Default.xml	(date 1732263349368)
@@ -3,19 +3,15 @@
     <option name="myName" value="Project Default" />
     <inspection_tool class="ComposePreviewDimensionRespectsLimit" enabled="true" level="WARNING" enabled_by_default="true">
       <option name="composableFile" value="true" />
-      <option name="previewFile" value="true" />
     </inspection_tool>
     <inspection_tool class="ComposePreviewMustBeTopLevelFunction" enabled="true" level="ERROR" enabled_by_default="true">
       <option name="composableFile" value="true" />
-      <option name="previewFile" value="true" />
     </inspection_tool>
     <inspection_tool class="ComposePreviewNeedsComposableAnnotation" enabled="true" level="ERROR" enabled_by_default="true">
       <option name="composableFile" value="true" />
-      <option name="previewFile" value="true" />
     </inspection_tool>
     <inspection_tool class="ComposePreviewNotSupportedInUnitTestFiles" enabled="true" level="ERROR" enabled_by_default="true">
       <option name="composableFile" value="true" />
-      <option name="previewFile" value="true" />
     </inspection_tool>
     <inspection_tool class="GlancePreviewDimensionRespectsLimit" enabled="true" level="WARNING" enabled_by_default="true">
       <option name="composableFile" value="true" />
@@ -31,23 +27,21 @@
     </inspection_tool>
     <inspection_tool class="PreviewAnnotationInFunctionWithParameters" enabled="true" level="ERROR" enabled_by_default="true">
       <option name="composableFile" value="true" />
-      <option name="previewFile" value="true" />
     </inspection_tool>
     <inspection_tool class="PreviewApiLevelMustBeValid" enabled="true" level="ERROR" enabled_by_default="true">
       <option name="composableFile" value="true" />
-      <option name="previewFile" value="true" />
+    </inspection_tool>
+    <inspection_tool class="PreviewDeviceShouldUseNewSpec" enabled="true" level="WEAK WARNING" enabled_by_default="true">
+      <option name="composableFile" value="true" />
     </inspection_tool>
     <inspection_tool class="PreviewFontScaleMustBeGreaterThanZero" enabled="true" level="ERROR" enabled_by_default="true">
       <option name="composableFile" value="true" />
-      <option name="previewFile" value="true" />
     </inspection_tool>
     <inspection_tool class="PreviewMultipleParameterProviders" enabled="true" level="ERROR" enabled_by_default="true">
       <option name="composableFile" value="true" />
-      <option name="previewFile" value="true" />
     </inspection_tool>
     <inspection_tool class="PreviewPickerAnnotation" enabled="true" level="ERROR" enabled_by_default="true">
       <option name="composableFile" value="true" />
-      <option name="previewFile" value="true" />
     </inspection_tool>
   </profile>
 </component>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision fec2ff08cda1195855a16e74230d11ee5d068e58)
+++ b/.idea/vcs.xml	(date 1732263241857)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+    <mapping directory="" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: app/src/main/java/com/example/marsnasa1/saveimg/saveImageToGallery.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/marsnasa1/saveimg/saveImageToGallery.kt b/app/src/main/java/com/example/marsnasa1/saveimg/saveImageToGallery.kt
new file mode 100644
--- /dev/null	(date 1732263634603)
+++ b/app/src/main/java/com/example/marsnasa1/saveimg/saveImageToGallery.kt	(date 1732263634603)
@@ -0,0 +1,24 @@
+package com.example.marsnasa1.saveimg
+
+import android.content.Context
+import android.graphics.Bitmap
+import android.os.Environment
+import android.widget.Toast
+import java.io.File
+import java.io.FileOutputStream
+import java.io.IOException
+
+fun saveImageToGallery(context: Context, bitmap: Bitmap, imageName: String) {
+    val storageDir = context.getExternalFilesDir(Environment.DIRECTORY_PICTURES)
+    val file = File(storageDir, "$imageName.jpg")
+
+    try {
+        FileOutputStream(file).use { out ->
+            bitmap.compress(Bitmap.CompressFormat.JPEG, 100, out)
+            Toast.makeText(context, "Изображение сохранено в галерею!", Toast.LENGTH_SHORT).show()
+        }
+    } catch (e: IOException) {
+        e.printStackTrace()
+        Toast.makeText(context, "Ошибка при сохранении изображения!", Toast.LENGTH_SHORT).show()
+    }
+}
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"#GRADLE_LOCAL_JAVA_HOME\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveExternalAnnotations\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision fec2ff08cda1195855a16e74230d11ee5d068e58)
+++ b/.idea/gradle.xml	(date 1732263349398)
@@ -4,6 +4,7 @@
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
+        <option name="testRunner" value="CHOOSE_PER_TEST" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
         <option name="gradleJvm" value="#GRADLE_LOCAL_JAVA_HOME" />
         <option name="modules">
Index: app/src/main/java/com/example/marsnasa1/api/Marsnasa1Api.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.marsnasa1.api\r\n\r\nimport com.example.marsnasa1.retrofit.Marsnasa1Retrofitinstance\r\nimport retrofit2.Call\r\nimport retrofit2.http.GET\r\nimport retrofit2.http.Path\r\nimport retrofit2.http.Query\r\n\r\ninterface Marsnasa1Api {@GET(\"mars-photos/api/v1/rovers/{rover}/photos\")\r\nfun getPhotos(\r\n    @Path(\"rover\") rover: String,\r\n    @Query(\"sol\") sol: Int,\r\n    @Query(\"earth_date\") date: String? = null,\r\n    @Query(\"api_key\") apiKey: String\r\n): Call<Marsnasa1Retrofitinstance>\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/marsnasa1/api/Marsnasa1Api.kt b/app/src/main/java/com/example/marsnasa1/api/Marsnasa1Api.kt
--- a/app/src/main/java/com/example/marsnasa1/api/Marsnasa1Api.kt	(revision fec2ff08cda1195855a16e74230d11ee5d068e58)
+++ b/app/src/main/java/com/example/marsnasa1/api/Marsnasa1Api.kt	(date 1732263265231)
@@ -1,5 +1,6 @@
 package com.example.marsnasa1.api
 
+import com.example.marsnasa1.model.Marsnasa1Response
 import com.example.marsnasa1.retrofit.Marsnasa1Retrofitinstance
 import retrofit2.Call
 import retrofit2.http.GET
@@ -12,5 +13,5 @@
     @Query("sol") sol: Int,
     @Query("earth_date") date: String? = null,
     @Query("api_key") apiKey: String
-): Call<Marsnasa1Retrofitinstance>
+): Call<Marsnasa1Response>
 }
\ No newline at end of file
